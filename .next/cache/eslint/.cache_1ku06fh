[{"C:\\Users\\tania\\repo\\react-2\\src\\components\\CheckList.tsx":"1","C:\\Users\\tania\\repo\\react-2\\src\\components\\DeleteMovie.tsx":"2","C:\\Users\\tania\\repo\\react-2\\src\\components\\EditMovie.tsx":"3","C:\\Users\\tania\\repo\\react-2\\src\\components\\ErrorBoundary.tsx":"4","C:\\Users\\tania\\repo\\react-2\\src\\components\\Footer.tsx":"5","C:\\Users\\tania\\repo\\react-2\\src\\components\\Header.tsx":"6","C:\\Users\\tania\\repo\\react-2\\src\\components\\Logo.tsx":"7","C:\\Users\\tania\\repo\\react-2\\src\\components\\Movie.tsx":"8","C:\\Users\\tania\\repo\\react-2\\src\\components\\MovieControls.tsx":"9","C:\\Users\\tania\\repo\\react-2\\src\\components\\NotFound.tsx":"10","C:\\Users\\tania\\repo\\react-2\\src\\components\\Search.tsx":"11","C:\\Users\\tania\\repo\\react-2\\src\\components\\SelectedMovie.tsx":"12","C:\\Users\\tania\\repo\\react-2\\src\\declarations.d.ts":"13","C:\\Users\\tania\\repo\\react-2\\src\\mocks\\filemock.js":"14","C:\\Users\\tania\\repo\\react-2\\src\\models\\interfaces.ts":"15","C:\\Users\\tania\\repo\\react-2\\src\\models\\mocks.ts":"16","C:\\Users\\tania\\repo\\react-2\\src\\pages\\index.tsx":"17","C:\\Users\\tania\\repo\\react-2\\src\\services\\hooks.ts":"18","C:\\Users\\tania\\repo\\react-2\\src\\services\\moviesService.ts":"19","C:\\Users\\tania\\repo\\react-2\\src\\store\\store.ts":"20","C:\\Users\\tania\\repo\\react-2\\src\\tests\\CheckList.spec.tsx":"21","C:\\Users\\tania\\repo\\react-2\\src\\tests\\Footer.spec.tsx":"22","C:\\Users\\tania\\repo\\react-2\\src\\tests\\Search.spec.tsx":"23","C:\\Users\\tania\\repo\\react-2\\src\\pages\\404.tsx":"24","C:\\Users\\tania\\repo\\react-2\\src\\pages\\_app.js":"25"},{"size":1856,"mtime":1669943206024,"results":"26","hashOfConfig":"27"},{"size":649,"mtime":1668365718004,"results":"28","hashOfConfig":"27"},{"size":5141,"mtime":1672785496497,"results":"29","hashOfConfig":"27"},{"size":905,"mtime":1667678600476,"results":"30","hashOfConfig":"27"},{"size":147,"mtime":1668365724412,"results":"31","hashOfConfig":"27"},{"size":543,"mtime":1672788774847,"results":"32","hashOfConfig":"27"},{"size":197,"mtime":1672352203709,"results":"33","hashOfConfig":"27"},{"size":1745,"mtime":1672788675212,"results":"34","hashOfConfig":"27"},{"size":3246,"mtime":1672788330566,"results":"35","hashOfConfig":"27"},{"size":215,"mtime":1672352203712,"results":"36","hashOfConfig":"27"},{"size":1014,"mtime":1672788757905,"results":"37","hashOfConfig":"27"},{"size":1020,"mtime":1672788747989,"results":"38","hashOfConfig":"27"},{"size":48,"mtime":1667678600481,"results":"39","hashOfConfig":"27"},{"size":19,"mtime":1672250298646,"results":"40","hashOfConfig":"27"},{"size":345,"mtime":1672352203713,"results":"41","hashOfConfig":"27"},{"size":366,"mtime":1672250291335,"results":"42","hashOfConfig":"27"},{"size":5503,"mtime":1672786761390,"results":"43","hashOfConfig":"27"},{"size":915,"mtime":1672251274039,"results":"44","hashOfConfig":"27"},{"size":1780,"mtime":1672352203722,"results":"45","hashOfConfig":"27"},{"size":532,"mtime":1672352203722,"results":"46","hashOfConfig":"27"},{"size":967,"mtime":1672352203724,"results":"47","hashOfConfig":"27"},{"size":328,"mtime":1672352203725,"results":"48","hashOfConfig":"27"},{"size":1262,"mtime":1672352203726,"results":"49","hashOfConfig":"27"},{"size":207,"mtime":1672352203714,"results":"50","hashOfConfig":"27"},{"size":555,"mtime":1672352203715,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1c2spi5",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tania\\repo\\react-2\\src\\components\\CheckList.tsx",[],[],"C:\\Users\\tania\\repo\\react-2\\src\\components\\DeleteMovie.tsx",[],[],"C:\\Users\\tania\\repo\\react-2\\src\\components\\EditMovie.tsx",[],["128","129","130"],"C:\\Users\\tania\\repo\\react-2\\src\\components\\ErrorBoundary.tsx",[],[],"C:\\Users\\tania\\repo\\react-2\\src\\components\\Footer.tsx",[],[],"C:\\Users\\tania\\repo\\react-2\\src\\components\\Header.tsx",[],[],"C:\\Users\\tania\\repo\\react-2\\src\\components\\Logo.tsx",[],[],"C:\\Users\\tania\\repo\\react-2\\src\\components\\Movie.tsx",[],[],"C:\\Users\\tania\\repo\\react-2\\src\\components\\MovieControls.tsx",[],[],"C:\\Users\\tania\\repo\\react-2\\src\\components\\NotFound.tsx",[],[],"C:\\Users\\tania\\repo\\react-2\\src\\components\\Search.tsx",[],[],"C:\\Users\\tania\\repo\\react-2\\src\\components\\SelectedMovie.tsx",[],[],"C:\\Users\\tania\\repo\\react-2\\src\\declarations.d.ts",[],[],"C:\\Users\\tania\\repo\\react-2\\src\\mocks\\filemock.js",[],[],"C:\\Users\\tania\\repo\\react-2\\src\\models\\interfaces.ts",[],[],"C:\\Users\\tania\\repo\\react-2\\src\\models\\mocks.ts",[],[],"C:\\Users\\tania\\repo\\react-2\\src\\pages\\index.tsx",["131"],[],"import React, { ReactElement, useCallback, useEffect, useState } from 'react'\r\n\r\nimport header_bg from '..//public/header_bg.png'\r\nimport DeleteMovie from '../components/DeleteMovie'\r\nimport EditMovie from '../components/EditMovie'\r\nimport ErrorBoundary from '../components/ErrorBoundary'\r\nimport Footer from '../components/Footer'\r\nimport Header from '../components/Header'\r\nimport Movie from '../components/Movie'\r\nimport MovieControls from '../components/MovieControls'\r\nimport Search from '../components/Search'\r\nimport SelectedMovie from '../components/SelectedMovie'\r\nimport { MovieResponse } from '../models/interfaces'\r\nimport { EmptyMovie, genres } from '../models/mocks'\r\nimport { useSearchParams } from 'next/navigation'\r\nimport { useRouter } from 'next/router'\r\nimport Head from 'next/head'\r\n\r\nimport { apiSlice, useDeleteMovieMutation, useGetMoviesQuery } from '../services/moviesService'\r\nimport { wrapper } from '../store/store'\r\nconst movieContext = React.createContext<any>(null)\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(\r\n  (store: any) => async (context) => {\r\n    const { params, query } = context\r\n    let sortBy = 'vote_count'\r\n    let filter = ''\r\n    let search = ''\r\n    if (query !== undefined) {\r\n      search = query.queryParam !== undefined ? query.queryParam[0] : ''\r\n    }\r\n\r\n    if (params !== undefined) {\r\n      const genre = params.genre ?? ''\r\n      const sortByQuery = params.sortByQuery ?? ''\r\n      // const movieId = params.movieId ?? ''\r\n      if (genre.length > 0) {\r\n        filter = genre[0] === 'All' ? '' : genre[0]\r\n      }\r\n      if (sortByQuery.length > 0) {\r\n        sortBy = sortByQuery[0]\r\n      }\r\n    }\r\n\r\n    const args = { sortBy, filter, search }\r\n    store.dispatch(apiSlice.endpoints.getMovies.initiate(args))\r\n    await Promise.all(store.dispatch(apiSlice.util.getRunningQueriesThunk()))\r\n    return {\r\n      props: {}\r\n    }\r\n  }\r\n)\r\n\r\nfunction HomePage (): ReactElement {\r\n  const router = useRouter()\r\n  const searchParams = useSearchParams()\r\n\r\n  const [openConfirmBox, setOpenConfirmBox] = useState(false)\r\n  const [openEditBox, setOpenEditBox] = useState(false)\r\n  const [isEditMovie, setIsEditMovie] = useState(false)\r\n  const [selectedMovie, setSelectedMovie] = useState(EmptyMovie)\r\n  const [clickMovie, setClickedMovie] = useState<MovieResponse | null>(null)\r\n  const [sortBy, setSortBy] = useState('vote_count')\r\n  const [filter, setFilter] = useState('')\r\n  const [search, setSearch] = useState('')\r\n  const { data: movies } = useGetMoviesQuery({ sortBy, filter, search })\r\n\r\n  const [deleteMovieCall] = useDeleteMovieMutation()\r\n\r\n  const editMovie = useCallback((movie: MovieResponse): void => {\r\n    setSelectedMovie(movie)\r\n    setOpenEditBox(true)\r\n    setIsEditMovie(true)\r\n  }, [])\r\n\r\n  const deleteMovie = useCallback((movie: MovieResponse): void => {\r\n    setOpenConfirmBox(true)\r\n    setSelectedMovie(movie)\r\n  }, [])\r\n\r\n  const onConfirm = async (): Promise<void> => {\r\n    await deleteMovieCall(selectedMovie.id)\r\n    setOpenConfirmBox(false)\r\n  }\r\n  const onClose = (): void => {\r\n    setOpenConfirmBox(false)\r\n    setOpenEditBox(false)\r\n  }\r\n  const addMovie = (): void => {\r\n    setOpenEditBox(true)\r\n    setSelectedMovie(EmptyMovie)\r\n    setIsEditMovie(false)\r\n  }\r\n\r\n  const queryMatcher = ''\r\n  useEffect(() => {\r\n    const { queryParam } = router.query\r\n    const dataquery = queryParam !== undefined ? queryParam[0] : ''\r\n    setSearch(dataquery)\r\n    const genre = searchParams.get('genre') ?? ''\r\n    const sortByQuery = searchParams.get('sortBy') ?? ''\r\n    const movieId = searchParams.get('movieId') ?? ''\r\n    if (genre !== '') {\r\n      genre === 'All' ? setFilter('') : setFilter(genre)\r\n    }\r\n    if (sortByQuery !== '') {\r\n      setSortBy(sortByQuery)\r\n    }\r\n    if (movieId !== '') {\r\n      const foundMovie = movies?.find(x => x.id === +movieId)\r\n      if (foundMovie !== undefined) {\r\n        setClickedMovie(foundMovie)\r\n      }\r\n    }\r\n  }, [queryMatcher, searchParams, movies])\r\n  return (\r\n    <>\r\n      <div className='main'>\r\n        <Head>\r\n          <title>Tania React App</title>\r\n          <meta name=\"description\" content=\"Tania React App\" />\r\n        </Head>\r\n        <movieContext.Provider value={{ clickMovie, setClickedMovie }}>\r\n          {openConfirmBox && <DeleteMovie onConfirm={onConfirm} onClose={onClose} />}\r\n          {openEditBox && <EditMovie movie={selectedMovie} isEdit={isEditMovie} onClose={onClose} />}\r\n          <div className={(clickMovie != null) ? 'selected-movie top-content' : 'top-content'} style={{ backgroundImage: (clickMovie != null) ? '' : `url('${(header_bg.src as string)}')` }}>\r\n            <Header onAddMovie={addMovie} />\r\n            <ErrorBoundary>\r\n              {(clickMovie != null)\r\n                ? <SelectedMovie movie={clickMovie} />\r\n                : <Search query={search} />}\r\n            </ErrorBoundary>\r\n          </div>\r\n        </movieContext.Provider>\r\n        <div className=\"main-content\">\r\n          <MovieControls count={movies?.length} genres={genres} selected={filter} sortSelected={sortBy} />\r\n          <div className='movie-tiles'>\r\n            {\r\n              movies?.map(movie => <ErrorBoundary key={movie.id} ><Movie key={movie.id} movie={movie} editMovie={() => editMovie(movie)} deleteMovie={() => deleteMovie(movie)} /></ErrorBoundary>)\r\n            }\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport { movieContext }\r\nexport default HomePage\r\n","C:\\Users\\tania\\repo\\react-2\\src\\services\\hooks.ts",[],[],"C:\\Users\\tania\\repo\\react-2\\src\\services\\moviesService.ts",[],[],"C:\\Users\\tania\\repo\\react-2\\src\\store\\store.ts",[],[],"C:\\Users\\tania\\repo\\react-2\\src\\tests\\CheckList.spec.tsx",[],[],"C:\\Users\\tania\\repo\\react-2\\src\\tests\\Footer.spec.tsx",[],[],"C:\\Users\\tania\\repo\\react-2\\src\\tests\\Search.spec.tsx",[],[],"C:\\Users\\tania\\repo\\react-2\\src\\pages\\404.tsx",[],[],"C:\\Users\\tania\\repo\\react-2\\src\\pages\\_app.js",[],[],{"ruleId":"132","severity":2,"message":"133","line":21,"column":18,"nodeType":"134","messageId":"135","endLine":21,"endColumn":29,"suppressions":"136"},{"ruleId":"132","severity":2,"message":"137","line":21,"column":31,"nodeType":"134","messageId":"135","endLine":21,"endColumn":43,"suppressions":"138"},{"ruleId":"132","severity":2,"message":"139","line":21,"column":45,"nodeType":"134","messageId":"135","endLine":21,"endColumn":57,"suppressions":"140"},{"ruleId":"141","severity":1,"message":"142","line":115,"column":6,"nodeType":"143","endLine":115,"endColumn":42,"suggestions":"144"},"@typescript-eslint/naming-convention","Variable name `poster_path` must match one of the following formats: camelCase, PascalCase, UPPER_CASE","Identifier","doesNotMatchFormat",["145"],"Variable name `release_date` must match one of the following formats: camelCase, PascalCase, UPPER_CASE",["146"],"Variable name `vote_average` must match one of the following formats: camelCase, PascalCase, UPPER_CASE",["147"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'router.query'. Either include it or remove the dependency array.","ArrayExpression",["148"],{"kind":"149","justification":"150"},{"kind":"149","justification":"150"},{"kind":"149","justification":"150"},{"desc":"151","fix":"152"},"directive","","Update the dependencies array to be: [queryMatcher, searchParams, movies, router.query]",{"range":"153","text":"154"},[3972,4008],"[queryMatcher, searchParams, movies, router.query]"]